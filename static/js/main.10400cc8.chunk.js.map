{"version":3,"sources":["services/fakeMovieService.js","components/common/favorite.jsx","components/movies/movies.jsx","App.js","serviceWorker.js","index.js"],"names":["movies","_id","title","genre","name","numberInStock","dailyRentalRate","publishDate","liked","Favorite","favorite","onClick","icon","className","Movies","props","handleDelete","movie","state","filter","m","setState","console","log","handleLike","index","indexOf","renderMovies","map","key","type","moviesHtml","counter","this","length","Fragment","Component","library","add","fas","far","App","counters","id","value","handleReset","c","handleIncrement","handleDecrement","counterId","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.10400cc8.chunk.js","sourcesContent":["import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Favorite = ({ favorite, onClick }) => {\r\n    let icon = ['far', 'heart'];\r\n\r\n    if (favorite) {\r\n        icon = ['fas', 'heart'];\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <FontAwesomeIcon className=\"cursor-pointer\" onClick={onClick} icon={icon} />\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Favorite;","import React, { Component } from \"react\";\r\nimport { getMovies } from \"../../services/fakeMovieService\";\r\nimport Favorite from \"../common/favorite\";\r\n\r\nclass Movies extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmovies: getMovies(),\r\n\t\t};\r\n\t}\r\n\r\n\thandleDelete = (movie) => {\r\n\t\tconst movies = this.state.movies.filter((m) => movie._id !== m._id);\r\n\t\tthis.setState({\r\n\t\t\tmovies,\r\n\t\t});\r\n\r\n\t\tconsole.log(this.state.movies);\r\n\t}\r\n\r\n\thandleLike = (movie) => {\r\n    const movies = [ ...this.state.movies ];\r\n    const index = movies.indexOf(movie);\r\n\r\n    movies[index] = {...movie};\r\n    movies[index].liked = !movies[index].liked;\r\n    \r\n    this.setState({ movies });\r\n\t}\r\n\r\n\trenderMovies = () => {\r\n\t\treturn this.state.movies.map((movie) => {\r\n\t\t\treturn (\r\n\t\t\t\t<tr key={movie._id}>\r\n\t\t\t\t\t<td>{movie.title}</td>\r\n\t\t\t\t\t<td>{movie.genre.name}</td>\r\n\t\t\t\t\t<td>{movie.numberInStock}</td>\r\n\t\t\t\t\t<td>{movie.dailyRentalRate}</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<Favorite onClick={() => this.handleLike(movie)} favorite={movie.liked} />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\t\tonClick={() => this.handleDelete(movie)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet moviesHtml;\r\n\t\tlet counter = this.state.movies && this.state.movies.length;\r\n\r\n\t\tif (counter <= 0) {\r\n\t\t\tmoviesHtml = <p>No movies found!</p>;\r\n\t\t} else {\r\n\t\t\tmoviesHtml = (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<p>There are {counter} movies in the database.</p>\r\n\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Title</th>\r\n\t\t\t\t\t\t\t\t<th>Genre</th>\r\n\t\t\t\t\t\t\t\t<th>Stock</th>\r\n\t\t\t\t\t\t\t\t<th>Rate</th>\r\n\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t\t<th>&nbsp;</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>{this.renderMovies()}</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn <div className=\"table-responsive\">{moviesHtml}</div>;\r\n\t}\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\nimport Movies from \"./components/movies/movies\";\nimport './App.css';\n// import NavBar from \"./components/navbar\";\n// import Counters from \"./components/counter/counters\";\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\n\nlibrary.add(fas, far);\n\nclass App extends React.Component {\n\tstate = {\n\t\tcounters: [\n\t\t\t{ id: 1, value: 2 },\n\t\t\t{ id: 2, value: 0 },\n\t\t\t{ id: 3, value: 0 },\n\t\t\t{ id: 4, value: 0 },\n\t\t],\n\t};\n\n\tgetTotal() {\n\t\treturn this.state.counters.filter((counter) => counter.value > 0).length;\n\t}\n\n\thandleReset = () => {\n\t\tconst counters = this.state.counters.filter((c) => {\n\t\t\tc.value = 0;\n\t\t\treturn c;\n\t\t});\n\n\t\tthis.setState({ counters });\n\t};\n\n\thandleIncrement = (counter) => {\n\t\tconst counters = [...this.state.counters];\n\t\tconst index = counters.indexOf(counter);\n\t\tcounters[index] = { ...counter };\n\t\tcounters[index].value++;\n\t\tthis.setState({ counters });\n  }\n  \n  handleDecrement = (counter) => {\n    if (counter.value <= 0) {\n      return;\n    }\n\n\t\tconst counters = [...this.state.counters];\n\t\tconst index = counters.indexOf(counter);\n\t\tcounters[index] = { ...counter };\n\t\tcounters[index].value--;\n\t\tthis.setState({ counters });\n\t}\n\n\thandleDelete = (counterId) => {\n\t\tconst counters = this.state.counters.filter((c) => c.id !== counterId);\n\t\tthis.setState({\n\t\t\tcounters,\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Movies />\n\t\t\t\t{/* <NavBar totalCounters={this.getTotal()} />\n\n\t\t\t\t<main className=\"container mt-2\">\n\t\t\t\t\t<Counters\n\t\t\t\t\t\tcounters={this.state.counters}\n\t\t\t\t\t\tonReset={this.handleReset}\n            \t\t\tonIncrement={this.handleIncrement}\n            \t\t\tonDecrement={this.handleDecrement}\n\t\t\t\t\t\tonDelete={this.handleDelete}\n\t\t\t\t\t/>\n\t\t\t\t</main> */}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}